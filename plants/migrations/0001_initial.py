# Generated by Django 5.0.1 on 2024-02-12 18:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num", models.IntegerField(verbose_name="bed number")),
                (
                    "is_raised",
                    models.BooleanField(default=False, verbose_name="raised bed"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("variety", models.CharField(max_length=250)),
                ("source", models.CharField(max_length=250)),
                ("source_url", models.URLField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        height_field="img_height",
                        null=True,
                        upload_to="",
                        width_field="img_width",
                    ),
                ),
                ("img_width", models.IntegerField()),
                ("img_height", models.IntegerField()),
                (
                    "min_germ_days",
                    models.IntegerField(verbose_name="minimum days to germinate"),
                ),
                (
                    "max_germ_days",
                    models.IntegerField(verbose_name="maximum days to germinate"),
                ),
                (
                    "min_maturity_days",
                    models.IntegerField(verbose_name="minimum days to maturity"),
                ),
                (
                    "max_maturity_days",
                    models.IntegerField(verbose_name="maximum days to maturity"),
                ),
                (
                    "first_start_dt",
                    models.DateField(verbose_name="earliest start date"),
                ),
                ("last_start_dt", models.DateField(verbose_name="latest start date")),
                (
                    "first_plant_dt",
                    models.DateField(verbose_name="earliest plant date"),
                ),
                ("last_plant_dt", models.DateField(verbose_name="latest plant date")),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task",
                    models.CharField(
                        choices=[
                            (0, "weed"),
                            (1, "water"),
                            (2, "fertilize"),
                            (3, "other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "freq",
                    models.CharField(
                        choices=[
                            (0, "daily"),
                            (1, "weekly"),
                            (2, "monthly"),
                            (3, "yearly"),
                        ],
                        max_length=1,
                        verbose_name="frequency",
                    ),
                ),
                ("note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Planting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("row", models.IntegerField()),
                ("count", models.IntegerField()),
                ("start_date", models.DateField()),
                ("plant_date", models.DateField()),
                ("harvest_date", models.DateField()),
                (
                    "bed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="plants.bed"
                    ),
                ),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="plants.plant"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("entry", models.TextField()),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="plants.task"
                    ),
                ),
            ],
        ),
    ]
